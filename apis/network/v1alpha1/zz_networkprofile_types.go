// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type NetworkProfileInitParameters struct {

	// Additional properties that may be used to extend the Network Profile object that is produced from this specification. For isolationType security group, datastoreId identifies the Compute Resource Edge datastore. computeCluster and resourcePoolId identify the Compute Resource Edge cluster. For isolationType subnet, distributedLogicalRouterStateLink identifies the on-demand network distributed local router. onDemandNetworkIPAssignmentType identifies the on-demand network IP range assignment type static, dynamic, or mixed.
	// +mapType=granular
	CustomProperties map[string]*string `json:"customProperties,omitempty" tf:"custom_properties,omitempty"`

	// A human-friendly description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// A list of fabric network Ids which are assigned to the network profile.
	// example: [ "6543" ]
	// +listType=set
	FabricNetworkIds []*string `json:"fabricNetworkIds,omitempty" tf:"fabric_network_ids,omitempty"`

	// The id of the fabric network used for outbound access.
	IsolatedExternalFabricNetworkID *string `json:"isolatedExternalFabricNetworkId,omitempty" tf:"isolated_external_fabric_network_id,omitempty"`

	// The CIDR prefix length to be used for the isolated networks that are created with the network profile.
	IsolatedNetworkCidrPrefix *float64 `json:"isolatedNetworkCidrPrefix,omitempty" tf:"isolated_network_cidr_prefix,omitempty"`

	// CIDR of the isolation network domain.
	IsolatedNetworkDomainCidr *string `json:"isolatedNetworkDomainCidr,omitempty" tf:"isolated_network_domain_cidr,omitempty"`

	// The id of the network domain used for creating isolated networks.
	IsolatedNetworkDomainID *string `json:"isolatedNetworkDomainId,omitempty" tf:"isolated_network_domain_id,omitempty"`

	// Specifies the isolation type e.g. none, subnet or security group
	IsolationType *string `json:"isolationType,omitempty" tf:"isolation_type,omitempty"`

	// A human-friendly name used as an identifier in APIs that support this option.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The id of the region for which this profile is defined as in vRealize Automation(vRA).
	RegionID *string `json:"regionId,omitempty" tf:"region_id,omitempty"`

	// A list of security group Ids which are assigned to the network profile.
	// example: [ "6545" ]
	// +listType=set
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// A set of tag keys and optional values that were set on this Network Profile.
	// example: [ { "key" : "ownedBy", "value": "Rainpole" } ]
	Tags []NetworkProfileTagsInitParameters `json:"tags,omitempty" tf:"tags,omitempty"`
}

type NetworkProfileLinksInitParameters struct {
}

type NetworkProfileLinksObservation struct {
	Href *string `json:"href,omitempty" tf:"href,omitempty"`

	// +listType=set
	Hrefs []*string `json:"hrefs,omitempty" tf:"hrefs,omitempty"`

	Rel *string `json:"rel,omitempty" tf:"rel,omitempty"`
}

type NetworkProfileLinksParameters struct {
}

type NetworkProfileObservation struct {

	// The ID of the cloud account this flavor profile belongs to.
	// The ID of the cloud account this entity belongs to.
	CloudAccountID *string `json:"cloudAccountId,omitempty" tf:"cloud_account_id,omitempty"`

	// Date when  entity was created. Date and time format is ISO 8601 and UTC.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// Additional properties that may be used to extend the Network Profile object that is produced from this specification. For isolationType security group, datastoreId identifies the Compute Resource Edge datastore. computeCluster and resourcePoolId identify the Compute Resource Edge cluster. For isolationType subnet, distributedLogicalRouterStateLink identifies the on-demand network distributed local router. onDemandNetworkIPAssignmentType identifies the on-demand network IP range assignment type static, dynamic, or mixed.
	// +mapType=granular
	CustomProperties map[string]*string `json:"customProperties,omitempty" tf:"custom_properties,omitempty"`

	// A human-friendly description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The external regionId of the resource.
	ExternalRegionID *string `json:"externalRegionId,omitempty" tf:"external_region_id,omitempty"`

	// A list of fabric network Ids which are assigned to the network profile.
	// example: [ "6543" ]
	// +listType=set
	FabricNetworkIds []*string `json:"fabricNetworkIds,omitempty" tf:"fabric_network_ids,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The id of the fabric network used for outbound access.
	IsolatedExternalFabricNetworkID *string `json:"isolatedExternalFabricNetworkId,omitempty" tf:"isolated_external_fabric_network_id,omitempty"`

	// The CIDR prefix length to be used for the isolated networks that are created with the network profile.
	IsolatedNetworkCidrPrefix *float64 `json:"isolatedNetworkCidrPrefix,omitempty" tf:"isolated_network_cidr_prefix,omitempty"`

	// CIDR of the isolation network domain.
	IsolatedNetworkDomainCidr *string `json:"isolatedNetworkDomainCidr,omitempty" tf:"isolated_network_domain_cidr,omitempty"`

	// The id of the network domain used for creating isolated networks.
	IsolatedNetworkDomainID *string `json:"isolatedNetworkDomainId,omitempty" tf:"isolated_network_domain_id,omitempty"`

	// Specifies the isolation type e.g. none, subnet or security group
	IsolationType *string `json:"isolationType,omitempty" tf:"isolation_type,omitempty"`

	// HATEOAS of the entity
	Links []NetworkProfileLinksObservation `json:"links,omitempty" tf:"links,omitempty"`

	// A human-friendly name used as an identifier in APIs that support this option.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// ID of organization that entity belongs to.
	OrgID *string `json:"orgId,omitempty" tf:"org_id,omitempty"`

	// The id of the organization this entity belongs to. Deprecated, refer to org_id instead.
	OrganizationID *string `json:"organizationId,omitempty" tf:"organization_id,omitempty"`

	// Email of the user that owns the entity.
	Owner *string `json:"owner,omitempty" tf:"owner,omitempty"`

	// The id of the region for which this profile is defined as in vRealize Automation(vRA).
	RegionID *string `json:"regionId,omitempty" tf:"region_id,omitempty"`

	// A list of security group Ids which are assigned to the network profile.
	// example: [ "6545" ]
	// +listType=set
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// A set of tag keys and optional values that were set on this Network Profile.
	// example: [ { "key" : "ownedBy", "value": "Rainpole" } ]
	Tags []NetworkProfileTagsObservation `json:"tags,omitempty" tf:"tags,omitempty"`

	// Date when the entity was last updated. The date is ISO 8601 and UTC.
	UpdatedAt *string `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`
}

type NetworkProfileParameters struct {

	// Additional properties that may be used to extend the Network Profile object that is produced from this specification. For isolationType security group, datastoreId identifies the Compute Resource Edge datastore. computeCluster and resourcePoolId identify the Compute Resource Edge cluster. For isolationType subnet, distributedLogicalRouterStateLink identifies the on-demand network distributed local router. onDemandNetworkIPAssignmentType identifies the on-demand network IP range assignment type static, dynamic, or mixed.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	CustomProperties map[string]*string `json:"customProperties,omitempty" tf:"custom_properties,omitempty"`

	// A human-friendly description.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// A list of fabric network Ids which are assigned to the network profile.
	// example: [ "6543" ]
	// +kubebuilder:validation:Optional
	// +listType=set
	FabricNetworkIds []*string `json:"fabricNetworkIds,omitempty" tf:"fabric_network_ids,omitempty"`

	// The id of the fabric network used for outbound access.
	// +kubebuilder:validation:Optional
	IsolatedExternalFabricNetworkID *string `json:"isolatedExternalFabricNetworkId,omitempty" tf:"isolated_external_fabric_network_id,omitempty"`

	// The CIDR prefix length to be used for the isolated networks that are created with the network profile.
	// +kubebuilder:validation:Optional
	IsolatedNetworkCidrPrefix *float64 `json:"isolatedNetworkCidrPrefix,omitempty" tf:"isolated_network_cidr_prefix,omitempty"`

	// CIDR of the isolation network domain.
	// +kubebuilder:validation:Optional
	IsolatedNetworkDomainCidr *string `json:"isolatedNetworkDomainCidr,omitempty" tf:"isolated_network_domain_cidr,omitempty"`

	// The id of the network domain used for creating isolated networks.
	// +kubebuilder:validation:Optional
	IsolatedNetworkDomainID *string `json:"isolatedNetworkDomainId,omitempty" tf:"isolated_network_domain_id,omitempty"`

	// Specifies the isolation type e.g. none, subnet or security group
	// +kubebuilder:validation:Optional
	IsolationType *string `json:"isolationType,omitempty" tf:"isolation_type,omitempty"`

	// A human-friendly name used as an identifier in APIs that support this option.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The id of the region for which this profile is defined as in vRealize Automation(vRA).
	// +kubebuilder:validation:Optional
	RegionID *string `json:"regionId,omitempty" tf:"region_id,omitempty"`

	// A list of security group Ids which are assigned to the network profile.
	// example: [ "6545" ]
	// +kubebuilder:validation:Optional
	// +listType=set
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// A set of tag keys and optional values that were set on this Network Profile.
	// example: [ { "key" : "ownedBy", "value": "Rainpole" } ]
	// +kubebuilder:validation:Optional
	Tags []NetworkProfileTagsParameters `json:"tags,omitempty" tf:"tags,omitempty"`
}

type NetworkProfileTagsInitParameters struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type NetworkProfileTagsObservation struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type NetworkProfileTagsParameters struct {

	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

// NetworkProfileSpec defines the desired state of NetworkProfile
type NetworkProfileSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     NetworkProfileParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider NetworkProfileInitParameters `json:"initProvider,omitempty"`
}

// NetworkProfileStatus defines the observed state of NetworkProfile.
type NetworkProfileStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        NetworkProfileObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// NetworkProfile is the Schema for the NetworkProfiles API. Provides a data lookup for vra_network_profile.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,vmware-vra}
type NetworkProfile struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.regionId) || (has(self.initProvider) && has(self.initProvider.regionId))",message="spec.forProvider.regionId is a required parameter"
	Spec   NetworkProfileSpec   `json:"spec"`
	Status NetworkProfileStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// NetworkProfileList contains a list of NetworkProfiles
type NetworkProfileList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []NetworkProfile `json:"items"`
}

// Repository type metadata.
var (
	NetworkProfile_Kind             = "NetworkProfile"
	NetworkProfile_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: NetworkProfile_Kind}.String()
	NetworkProfile_KindAPIVersion   = NetworkProfile_Kind + "." + CRDGroupVersion.String()
	NetworkProfile_GroupVersionKind = CRDGroupVersion.WithKind(NetworkProfile_Kind)
)

func init() {
	SchemeBuilder.Register(&NetworkProfile{}, &NetworkProfileList{})
}
